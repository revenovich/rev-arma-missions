#include "ATM_airdrop\dialog.hpp"
#include "taw_vd\dialog.hpp"

class Header
{
  gameType = COOP;
  minPlayers = 0;
  maxPlayers = 30;
};

aiKills = 0; 											// disable scorelist for AI players
enableItemsDropping = 1; 								// disabled with 0
joinUnassigned = 0;										// 0 = players forced into role on join

enableSaving = [false, false];

respawnDelay = 9;
respawnTemplates[] = {"Revive", "MenuPosition"};
respawnOnStart = -1;
reviveForceRespawnDelay = 5;
respawnButton = 0;
reviveBleedOutDelay = 300;


class Params
{
	class Perpetual
	{
		title = "Perpetual Mission Mode";
		values[] = {1,0};
		texts[] = {"On","Off"};
		default = 1;
	};

	class TimeOfDay
	{
		title = "Time of Day";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23};
		texts[] = {"00:00","01:00","02:00","03:00","04:00","05:00","06:00","07:00","08:00","09:00","10:00","11:00","12:00","13:00","14:00","15:00","16:00","17:00","18:00","19:00","20:00","21:00","22:00","23:00"};
		default = 7;
	};
	
	class Weather
	{
		title = "Starting Weather";
		values[] = {1,2,3,4};
		texts[] = {"Clear","Stormy","Cloudy","Foggy"};
		default = 1;
	};
	
	class EnemyLeftThreshhold
	{
		title = "Enemy Left Threshhold";
		values[] = {1,2,3,4,5,6,7,8,9,10};
		texts[] = {"1","2","3","4","5","6","7","8","9","10"};
		default = 8;
	};

	class RadioTowerMineFieldChance
	{
		title = "Chance for minefield to spawn around Radio Tower?";
		values[] = {0,1,2,3,4,5,6,7,8,9,11};
		texts[] = {"0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"};
		default = 5;
	};

	class SideMissions
	{
		title = "Enable Side Missions?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};

	class PriorityTargets
	{
		title = "Enable Priority Targets?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};

	class PriorityTargetTickTimeMin
	{
		title = "MINIMUM Time between Priority Target actions";
		values[] = {30,60,120,180,240,300,600,900};
		texts[] = {"30 seconds","1 minute","2 minutes","3 minutes","4 minutes","5 minutes","10 minutes","15 minutes"};
		default = 600;
	};

	class PriorityTargetTickTimeMax
	{
		title = "MAXIMUM Time between Priority Target actions";
		values[] = {30,60,120,180,240,300,600,900};
		texts[] = {"30 seconds","1 minute","2 minutes","3 minutes","4 minutes","5 minutes","10 minutes","15 minutes"};
		default = 900;
	};

	class PriorityTargetTickWarning
	{
		title = "Warnings from CROSSROAD regarding Priority Target actions?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};

	class SpawnProtection
	{
		title = "Spawn Protection Zone";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 0;
	};

	class PilotsOnly
	{
		title = "Can only pilots fly?";
		values[] = {1,0};
		texts[] = {"Yes","No"};
		default = 0;
	};
	
	class AOSize
	{
		title = "Main AO Diameter";
		values[] = {200,300,400,500,600,700,800,900,1000};
		texts[] = {"200m","300m","400m","500m","600m","700m","800m","900m","1,000m"};
		default = 500;
	};

	class ViewDistance
	{
		title = "Player View Distance Dialog";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 0;
	};

	class VehicleRespawnDistance
	{
		title = "Distance from players that vehicles won't respawn";
		values[] = {10,50,100,200,300,400,500,1000,2000,5000,10000};
		texts[] = {"10m","50m","100m","200m","300m","400m","500m","1km","2km","5km","10km"};
		default = 300;
	};

	class SquadsPatrol
	{
		title = "Squads Patrolling AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
		texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
		default = 3;
	};
	
	class SquadsDefend
	{
		title = "Squads Defending AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
		texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
		default = 2;
	};
	
	class TeamsPatrol
	{
		title = "Teams Patrolling AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
		texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
		default = 2;
	};
	
	class CarsPatrol
	{
		title = "Motorised Infantry Patrolling AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
		texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
		default = 1;
	};
};

class CfgNotifications
{
	class Default
	{
		title = ""; // Tile displayed as text on black background. Filled by arguments.
		iconPicture = ""; // Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = ""; // Short text displayed over the icon. Colored by "color", filled by arguments.
		description = ""; // Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1}; // Icon and text color
		duration = 5; // How many seconds will the notification be displayed
		priority = 0; // Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {}; // Required difficulty settings. All listed difficulties has to be enabled
	};

	class NewMain
	{
		title = "NEW MAIN OBJECTIVE";
		description = "Take %1";
		iconPicture = "notificons\main_objective.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 9;
	};

	class CompletedMain
	{
		title = "MAIN OBJECTIVE COMPLETE";
		description = "Taken %1";
		iconPicture = "notificons\main_objective_completed.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 9;
	};

	class NewSub
	{
		title = "NEW SUB-OBJECTIVE";
		description = "%1";
		iconPicture = "notificons\sub_objective.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};

	class CompletedSub
	{
		title = "SUB-OBJECTIVE COMPLETE";
		description = "%1";
		iconPicture = "notificons\sub_objective_completed.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};

	class NewSideMission
	{
		title = "NEW SIDE MISSION";
		iconPicture = "notificons\side_mission.paa";
		description = "%1";
		color[] = {0, 0.7, 0.93, 1};
		priority = 7;
	};

	class CompletedSideMission
	{
		title = "SIDE MISSION COMPLETE";
		iconPicture = "notificons\side_mission_completed.paa";
		description = "%1";
		color[] = {0, 0.7, 0.93, 1};
		priority = 7;
	};

	class NewPriorityTarget
	{
		title = "NEW PRIORITY TARGET";
		iconPicture = "notificons\priority_target.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 10;
	};

	class CompletedPriorityTarget
	{
		title = "PRIORITY TARGET DOWN";
		iconPicture = "notificons\priority_target_neutralised.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 10;
	};

	class Reward
	{
		title = "TEAM REWARD";
		description = "%1";
		iconPicture = "notificons\reward.paa";
		color[] = {0.38, 0.81, 0.16, 1};
		priority = 6;
	};
};

class CfgSounds
{
   sounds[] = {Vent,Vent2,Para};

	class Vent {name="Vent";sound[]={ATM_airdrop\data\Vent.ogg,db-11,1.0};titles[] = {};};
	class Vent2 {name="Vent2";sound[]={ATM_airdrop\data\Vent2.ogg,db-11,1.0};titles[] = {};};
	class Para {name="Para";sound[]={ATM_airdrop\data\parachute.ogg,db-11,1.0};titles[] = {};};
};

/* class CfgSounds
{
	sounds[] = {};
	class contactDestroyChopper
	{
		name = "Contact: Destroy Chopper";
		sound[] = {"sm\contact_sounds\contactDestroyChopper.ogg", db+50, 1};
		titles[] = {};
	};
	
	class contactDestroySmallRadar
	{
		name = "Contact: Destroy Small Radar";
		sound[] = {"sm\contact_sounds\contactDestroySmallRadar.ogg", db+50, 1};
		titles[] = {};
	};
}; 
*/
author = [AW] [Overhauled];
onLoadName = "AW Invade & Annex";
loadScreen = "awMissionLogo.jpg";
OnLoadMission = "Invade and Annex";



/*respawn = BASE;
respawnDelay = 4;
respawnDialog = 0;*/

							
wreckLimit = 3;											// Limit before removal is triggered
wreckRemovalMinTime = 120;								// Min time before removal
wreckRemovalMaxTime = 360;								// Max time before removal
corpseLimit = 15;										// Limit before removal is triggered		
corpseRemovalMinTime = 300;								// Min time before removal
corpseRemovalMaxTime = 600;								// Max time before removal

//--- Control Chat - Format: {channelID<number>, disableChat<bool>, disableVoice<bool>}
disableChannels[] = {
    {0, false, true}, //--- Global Chat
    {1, false, true}, //--- Side Chat
    {2, false, false}, //--- Command Chat
    {3, false, false}, //--- Group Chat
    {4, false, false}, //--- Vehicle Chat
    {5, false, false}, //--- Direct Chat
    {6, false, true} //--- System Chat
};